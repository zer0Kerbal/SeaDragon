PART
{
	name = RSSDengineStage1
	module = Part
	author = NecroBones

	// --- asset parameters ---
	MODEL
	{
		model = NecroBones/SeaDragon/Parts/RSSDengineStage1
		scale = 10.0, 10.0, 10.0
	}
	scale = 1.0
	rescaleFactor = 1.0

	CoPOffset = 0.0, -30.0, 0.0
	CoMOffset = 0.0, -5.0, 0.0
	CoLOffset = 0.0, -30.0, 0.0
	CenterOfBuoyancy = 0.0, -30, 0.0
	CenterOfDisplacement = 0.0, -30, 0.0
	buoyancy = 0.015

	node_stack_top = 0.0, 1.2, 0.0, 0.0, 1.0, 0.0, 8
	node_stack_bottom = 0.0, -8.3, 0.0, 0.0, -1.0, 0.0, 8

	TechRequired = veryHeavyRocketry
	entryCost = 1975000
	cost = 1595000
	category = Engine
	subcategory = 0
	title = Sea Dragon First Stage Engine
	manufacturer = Real Scale Sea Dragon
	description = First stage engine of the never-built Sea Dragon. Equipped with a deployable "recovery flare", which is an inflatable drag system, and on-board electronics for deploying it.
	tags = sea dragon seadragon engine ascent launch main propuls rocket stage

	attachRules = 1,1,1,1,1

	mass = 277.325			// http://neverworld.net/truax/Sea_Dragon_Concept_Volume_3.pdf
	heatConductivity = 0.06 // half default
	skinInternalConductionMult = 4.0
	emissiveConstant = 0.8 // engine nozzles are good at radiating.

	dragModelType = default
	maximum_drag = 0.2
	minimum_drag = 0.2
	angularDrag = 2
	crashTolerance = 150
	breakingForce = 350000
	breakingTorque = 350000
	maxTemp = 2400 // = 3600
	bulkheadProfiles = size8
	vesselType = Probe

	SMURFFExclude = true	// For the SMURFF mod, so it doesn't alter our engine mass.

	MODULE
	{
		name = ModuleAnimateGeneric
		animationName = deploy
		isOneShot = false
		startEventGUIName = Inflate Recovery Flare
		endEventGUIName = Deflate Recovery Flare
		actionGUIName = Toggle Recovery Flare
		allowAnimationWhileShielded = False
		//restrictedNode = bottom
		disableAfterPlaying = false
	}

	MODULE
	{
		name = ModuleCommand
		minimumCrew = 0
		RESOURCE
		{
			name = ElectricCharge
			rate = 0.025
		}
	}
	RESOURCE
	{
		name = ElectricCharge
		amount = 25
		maxAmount = 25
	}

	MODULE
	{
		name = ModuleEnginesFX
		engineID = RSSD1
		runningEffectName = running_closed
		thrustVectorTransformName = thrustTransform
		exhaustDamage = True
		ignitionThreshold = 0.1
		minThrust = 0
		maxThrust = 360000		// https://en.wikipedia.org/wiki/Sea_Dragon_%28rocket%29
		heatProduction = 250
		fxOffset = 0, 0, 0.0
		engineAccelerationSpeed = 0.4
		engineDecelerationSpeed = 0.5
		EngineType = LiquidFuel
		PROPELLANT
		{
			name = LiquidFuel
			ratio = 0.9
			DrawGauge = True
		}
		PROPELLANT
		{
			name = Oxidizer
			ratio = 1.1
		}
		atmosphereCurve
		{
			key = 0 275	// Guess.
			key = 1 256	// based on 80x10^6 sealevel thrust & 25,277,380 lbs propellant over 81 seconds.
			key = 12 0.001
		}
	}

	EFFECTS
	{
		running_closed
		{
			AUDIO
			{
				channel = Ship
				clip = NecroBones/SeaDragon/FX/RSBengine2		// sound_rocket_hard
				volume = 0.0 0.0
				volume = 1.0 8.0
				pitch = 0.0 0.5
				pitch = 1.0 0.9
				loop = true
			}
//			PREFAB_PARTICLE
//			{
//				prefabName = fx_smokeTrail_veryLarge
//				transformName = smokeTransform
//				emission = 0.0 0.0
//				emission = 0.05 0.0
//				emission = 0.075 0.25
//				emission = 1.0 1.5
//				speed = 0.0 0.25
//				speed = 1.0 1.2
//				localOffset = 0, 0, 1
//			}
			MODEL_MULTI_PARTICLE
			{
				name = smokeEmitter
				modelName = NecroBones/SeaDragon/FX/RSSDemitterSmoke
				transformName = smokeTransform
				emission = 0.0 0.0
				emission = 0.05 0.0
				emission = 0.075 0.25
				emission = 1.0 1.5
				speed = 0.0 0.25
				speed = 1.0 1.2
			}
			MODEL_MULTI_PARTICLE
			{
				name = flameEmitter
				modelName = NecroBones/SeaDragon/FX/RSSDemitterStage1	// Squad/FX/ksX_Exhaust
				transformName = fxTransform
				emission = 0.0 0.0
				emission = 0.05 0.0
				emission = 0.075 0.25
				emission = 1.0 1.0
				speed = 0.0 0.5
				speed = 1.0 1.0
			}
		}
		engage
		{
			AUDIO
			{
				channel = Ship
				clip = sound_vent_soft
				volume = 1.0
				pitch = 1.5
				loop = false
			}
		}
		flameout
		{
			PREFAB_PARTICLE
			{
				prefabName = fx_exhaustSparks_flameout_2
				transformName = fxTransform
				oneShot = true
			}
			AUDIO
			{
				channel = Ship
				clip = sound_explosion_low
				volume = 1.0
				pitch = 1.5
				loop = false
			}
		}
	}
	MODULE
	{
		name = FXModuleAnimateThrottle
		animationName = RSSDengineHeat
		responseSpeed = 0.02
		dependOnEngineState = True
		dependOnThrottle = True
	}
	MODULE
	{
		name = ModuleSurfaceFX
		thrustProviderModuleIndex = 0
		fxMax = 5.0
		maxDistance = 250
		falloff = 1.5
		thrustTransformName = thrustTransform
	}
	MODULE
	{
		name = ModuleGimbal
		gimbalTransformName = gimbalTransform
		gimbalRange = 3
		useGimbalResponseSpeed = true
		gimbalResponseSpeed = 10
	}
	MODULE
	{
		name = ModuleTestSubject
		useStaging = True
		useEvent = True
		situationMask = 127
		CONSTRAINT
		{
			type = REPEATABILITY
			value = ALWAYS
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = REPEATABILITY
			value = BODYANDSITUATION
			prestige = Significant
		}
		CONSTRAINT
		{
			type = REPEATABILITY
			value = ONCEPERPART
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 4000
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 8000
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 2000
			prestige = Significant
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 4000
			prestige = Significant
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 1000
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 2000
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = ALTITUDE
			test = GT
			value = 0 // this just registers altitude as something to care about
			situationMask = 8
		}
		CONSTRAINT
		{
			type = ALTITUDE
			test = LT
			value = 300000
			situationMask = 16
			body = _NotSun
		}
		CONSTRAINT
		{
			type = ALTITUDE
			test = LT
			value = 600000
			situationMask = 32
			body = _NotSun
		}
		CONSTRAINT
		{
			type = SPEED
			test = GT
			value = 0
			situationMask = 8
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = SPEED
			test = LT
			value = 600
			situationMask = 8
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = SPEED
			test = GT
			value = 300
			situationMask = 8
			prestige = Significant
		}
		CONSTRAINT
		{
			type = SPEED
			test = LT
			value = 1200
			situationMask = 8
			prestige = Significant
		}
		CONSTRAINT
		{
			type = SPEED
			test = GT
			value = 600
			situationMask = 8
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = SPEED
			test = LT
			value = 2500
			situationMask = 8
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = LT
			value = 200
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = GT
			value = 100
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = LT
			value = 100
			prestige = Significant
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = GT
			value = 50
			prestige = Significant
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = LT
			value = 50
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = GT
			value = 20
			prestige = Exceptional
		}
	}
}

