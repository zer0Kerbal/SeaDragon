// sea-engineStage2.cfg v1.4.0.0
// Sea Dragon (SEA)
// created: 25 Mar 2016
// updated: 01 Sept 2022

// this file: CC BY-SA 4.0 by zer0Kerbal

PART
{
	name = sea-engineStage2
	// RSSDengineStage2
	module = Part
	author = NecroBones and zer0Kerbal

	// --- asset parameters ---
	MODEL
	{
		model = NecroBones/SeaDragon/Parts/RSSDengineStage2
		scale = 10.0, 10.0, 10.0
	}
	scale = 1.0
	rescaleFactor = 1.0

	CoPOffset = 0.0, -2.5, 0.0
	CoMOffset = 0.0, -1.0, 0.0

	node_stack_bottom = 0.0, -14.5, 0.0, 0.0, -1.0, 0.0, 8
	node_stack_top = 0.0, 1.2, 0.0, 0.0, 1.0, 0.0, 8

	TechRequired = veryHeavyRocketry
	entryCost = 1975000
	cost = 1595000
	category = Engine
	subcategory = 0
	title = Sea Dragon Second Stage Engine
	manufacturer = Real Scale Sea Dragon
	description = Second stage engine of the never-built Sea Dragon. Equipped with a bell extension, allowing for a reasonable compromise between vacuum efficiency, and storage compaction.
	tags = sea dragon seadragon engine ascent launch main propuls rocket stage

	attachRules = 1,0,1,0,1

	mass = 79			// http://neverworld.net/truax/Sea_Dragon_Concept_Volume_3.pdf
	heatConductivity = 0.06 // half default
	skinInternalConductionMult = 4.0
	emissiveConstant = 0.8 // engine nozzles are good at radiating.

	dragModelType = default
	maximum_drag = 0.2
	minimum_drag = 0.2
	angularDrag = 2
	crashTolerance = 20
	breakingForce = 150000
	breakingTorque = 150000
	maxTemp = 2300 // = 3600
	bulkheadProfiles = size8

	SMURFFExclude = true	// For the SMURFF mod, so it doesn't alter our engine mass.

	MODULE
	{
		name = ModuleAnimateGeneric
		animationName = retract
		startEventGUIName = Retract
		endEventGUIName = Extend
		actionGUIName = Toggle Extension
		allowDeployLimit = false
		revClampDirection = false
		revClampSpeed = true	
		revClampPercent = true			
	}

	MODULE
	{
		name = ModuleEnginesFX
		engineID = RSSD2
		runningEffectName = running_closed
		thrustVectorTransformName = thrustTransform
		exhaustDamage = True
		ignitionThreshold = 0.1
		minThrust = 0
		maxThrust = 62500
		heatProduction = 250
		fxOffset = 0, 0, 0.0
		engineAccelerationSpeed = 0.4
		engineDecelerationSpeed = 0.5
		EngineType = LiquidFuel
		PROPELLANT
		{
			name = LiquidFuel
			ratio = 0.9
			DrawGauge = True
		}
		PROPELLANT
		{
			name = Oxidizer
			ratio = 1.1
		}
		atmosphereCurve
		{
			key = 0 382	// based on 14.12x10^6 thrust, and 9,606,054 lbs propellant over 260 seconds.
			key = 1 275	// guess.
			key = 12 0.001
		}
	}

	EFFECTS
	{
		running_closed
		{
			AUDIO
			{
				channel = Ship
				clip = NecroBones/SeaDragon/FX/RSBengine2		// sound_rocket_hard
				volume = 0.0 0.0
				volume = 1.0 6.0
				pitch = 0.0 0.5
				pitch = 1.0 1.1
				loop = true
			}
			MODEL_MULTI_PARTICLE
			{
				modelName = NecroBones/SeaDragon/FX/RSSDemitterStage2	// Squad/FX/ksX_Exhaust
				transformName = fxTransform
				emission = 0.0 0.0
				emission = 0.05 0.0
				emission = 0.075 0.25
				emission = 1.0 1.0
				speed = 0.0 0.5
				speed = 1.0 1.0
			}
		}
		engage
		{
			AUDIO
			{
				channel = Ship
				clip = sound_vent_soft
				volume = 1.0
				pitch = 1.5
				loop = false
			}
		}
		flameout
		{
			PREFAB_PARTICLE
			{
				prefabName = fx_exhaustSparks_flameout_2
				transformName = fxTransform
				oneShot = true
			}
			AUDIO
			{
				channel = Ship
				clip = sound_explosion_low
				volume = 1.0
				pitch = 1.5
				loop = false
			}
		}
	}
	MODULE
	{
		name = FXModuleAnimateThrottle
		animationName = RSSDengineHeat
		responseSpeed = 0.02
		dependOnEngineState = True
		dependOnThrottle = True
	}
	MODULE
	{
		name = ModuleGimbal
		gimbalTransformName = thrustTransform
		gimbalRange = 0.25			// Cheating!
		useGimbalResponseSpeed = true
		gimbalResponseSpeed = 10
	}
	MODULE
	{
		name = ModuleSurfaceFX
		thrustProviderModuleIndex = 0
		fxMax = 5.0
		maxDistance = 250
		falloff = 1.5
		thrustTransformName = thrustTransform
	}
	MODULE
	{
		name = ModuleTestSubject
		useStaging = True
		useEvent = True
		situationMask = 127
		CONSTRAINT
		{
			type = REPEATABILITY
			value = ALWAYS
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = REPEATABILITY
			value = BODYANDSITUATION
			prestige = Significant
		}
		CONSTRAINT
		{
			type = REPEATABILITY
			value = ONCEPERPART
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 4000
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 8000
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 2000
			prestige = Significant
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 4000
			prestige = Significant
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 1000
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 2000
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = ALTITUDE
			test = GT
			value = 0 // this just registers altitude as something to care about
			situationMask = 8
		}
		CONSTRAINT
		{
			type = ALTITUDE
			test = LT
			value = 300000
			situationMask = 16
			body = _NotSun
		}
		CONSTRAINT
		{
			type = ALTITUDE
			test = LT
			value = 600000
			situationMask = 32
			body = _NotSun
		}
		CONSTRAINT
		{
			type = SPEED
			test = GT
			value = 0
			situationMask = 8
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = SPEED
			test = LT
			value = 600
			situationMask = 8
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = SPEED
			test = GT
			value = 300
			situationMask = 8
			prestige = Significant
		}
		CONSTRAINT
		{
			type = SPEED
			test = LT
			value = 1200
			situationMask = 8
			prestige = Significant
		}
		CONSTRAINT
		{
			type = SPEED
			test = GT
			value = 600
			situationMask = 8
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = SPEED
			test = LT
			value = 2500
			situationMask = 8
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = LT
			value = 200
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = GT
			value = 100
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = LT
			value = 100
			prestige = Significant
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = GT
			value = 50
			prestige = Significant
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = LT
			value = 50
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = GT
			value = 20
			prestige = Exceptional
		}
	}
}

